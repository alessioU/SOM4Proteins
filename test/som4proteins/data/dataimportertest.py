import unittest
import os
import numpy as np
from som4proteins.data.dataimporter import ProteinDataImporter

class FirstTest(unittest.TestCase):
    test_files_dir = os.path.join(os.environ["PROJECT_ABS_DIR"], "test", "testfiles")
    output_dir = os.path.join(os.environ["PROJECT_ABS_DIR"], "test", "output")
    
    def _remove_all_files(self):
        fileList = os.listdir(self.output_dir)
        for fileName in fileList:
            os.remove(os.path.join(self.output_dir, fileName))
            
    def setUp(self):
        self._remove_all_files()
        self.trajectory_file = os.path.join(self.test_files_dir, "trajcomb_ca_dt100_AHATV.xtc")
        self.structure_file = os.path.join(self.test_files_dir, "ahatv_CA_aligned.pdb")
        self.protein_name = "ahatv"
    
    def tearDown(self):
        self._remove_all_files()
    
    def test_print(self):
        p = ProteinDataImporter(trajectory_file=self.trajectory_file,
                            structure_file=self.structure_file,
                            protein_name=self.protein_name,
                            output_dir=self.output_dir)
        self.assertEqual(p.num_atoms, 448,
                         "The number of atoms in " + self.trajectory_file +
                                   " should be 448.")
        self.assertEqual(p.num_frames, 296,
                         "The number of frames in " + self.trajectory_file +
                                   " should be 296.")
        
    def test_extract_coordinates(self):
        p = ProteinDataImporter(trajectory_file=self.trajectory_file,
                            structure_file=self.structure_file,
                            protein_name=self.protein_name,
                            output_dir=self.output_dir)
        p._extract_coordinates()
        
        fileList = os.listdir(self.output_dir)
        self.assertEqual(len(fileList), p.num_frames,
                         "The number of files created should be"+
                         " equals to the number of frames.")
        
    def test_read_col_labes(self):
        p = ProteinDataImporter(trajectory_file=self.trajectory_file,
                            structure_file=self.structure_file,
                            protein_name=self.protein_name,
                            output_dir=self.output_dir)
        p._extract_coordinates()
        col_labels = p._read_col_labels()
        self.assertEqual(len(col_labels), p.num_atoms * 3, "There should be 3 coordinates for each atom.")
        
        col_labels_val = ['CA1x', 'CA1y', 'CA1z', 'CA2x', 'CA2y', 'CA2z', 'CA3x', 'CA3y', 'CA3z', 'CA4x', 'CA4y', 'CA4z', 'CA5x', 'CA5y', 'CA5z', 'CA6x', 'CA6y', 'CA6z', 'CA7x', 'CA7y', 'CA7z', 'CA8x', 'CA8y', 'CA8z', 'CA9x', 'CA9y', 'CA9z', 'CA10x', 'CA10y', 'CA10z', 'CA11x', 'CA11y', 'CA11z', 'CA12x', 'CA12y', 'CA12z', 'CA13x', 'CA13y', 'CA13z', 'CA14x', 'CA14y', 'CA14z', 'CA15x', 'CA15y', 'CA15z', 'CA16x', 'CA16y', 'CA16z', 'CA17x', 'CA17y', 'CA17z', 'CA18x', 'CA18y', 'CA18z', 'CA19x', 'CA19y', 'CA19z', 'CA20x', 'CA20y', 'CA20z', 'CA21x', 'CA21y', 'CA21z', 'CA22x', 'CA22y', 'CA22z', 'CA23x', 'CA23y', 'CA23z', 'CA24x', 'CA24y', 'CA24z', 'CA25x', 'CA25y', 'CA25z', 'CA26x', 'CA26y', 'CA26z', 'CA27x', 'CA27y', 'CA27z', 'CA28x', 'CA28y', 'CA28z', 'CA29x', 'CA29y', 'CA29z', 'CA30x', 'CA30y', 'CA30z', 'CA31x', 'CA31y', 'CA31z', 'CA32x', 'CA32y', 'CA32z', 'CA33x', 'CA33y', 'CA33z', 'CA34x', 'CA34y', 'CA34z', 'CA35x', 'CA35y', 'CA35z', 'CA36x', 'CA36y', 'CA36z', 'CA37x', 'CA37y', 'CA37z', 'CA38x', 'CA38y', 'CA38z', 'CA39x', 'CA39y', 'CA39z', 'CA40x', 'CA40y', 'CA40z', 'CA41x', 'CA41y', 'CA41z', 'CA42x', 'CA42y', 'CA42z', 'CA43x', 'CA43y', 'CA43z', 'CA44x', 'CA44y', 'CA44z', 'CA45x', 'CA45y', 'CA45z', 'CA46x', 'CA46y', 'CA46z', 'CA47x', 'CA47y', 'CA47z', 'CA48x', 'CA48y', 'CA48z', 'CA49x', 'CA49y', 'CA49z', 'CA50x', 'CA50y', 'CA50z', 'CA51x', 'CA51y', 'CA51z', 'CA52x', 'CA52y', 'CA52z', 'CA53x', 'CA53y', 'CA53z', 'CA54x', 'CA54y', 'CA54z', 'CA55x', 'CA55y', 'CA55z', 'CA56x', 'CA56y', 'CA56z', 'CA57x', 'CA57y', 'CA57z', 'CA58x', 'CA58y', 'CA58z', 'CA59x', 'CA59y', 'CA59z', 'CA60x', 'CA60y', 'CA60z', 'CA61x', 'CA61y', 'CA61z', 'CA62x', 'CA62y', 'CA62z', 'CA63x', 'CA63y', 'CA63z', 'CA64x', 'CA64y', 'CA64z', 'CA65x', 'CA65y', 'CA65z', 'CA66x', 'CA66y', 'CA66z', 'CA67x', 'CA67y', 'CA67z', 'CA68x', 'CA68y', 'CA68z', 'CA69x', 'CA69y', 'CA69z', 'CA70x', 'CA70y', 'CA70z', 'CA71x', 'CA71y', 'CA71z', 'CA72x', 'CA72y', 'CA72z', 'CA73x', 'CA73y', 'CA73z', 'CA74x', 'CA74y', 'CA74z', 'CA75x', 'CA75y', 'CA75z', 'CA76x', 'CA76y', 'CA76z', 'CA77x', 'CA77y', 'CA77z', 'CA78x', 'CA78y', 'CA78z', 'CA79x', 'CA79y', 'CA79z', 'CA80x', 'CA80y', 'CA80z', 'CA81x', 'CA81y', 'CA81z', 'CA82x', 'CA82y', 'CA82z', 'CA83x', 'CA83y', 'CA83z', 'CA84x', 'CA84y', 'CA84z', 'CA85x', 'CA85y', 'CA85z', 'CA86x', 'CA86y', 'CA86z', 'CA87x', 'CA87y', 'CA87z', 'CA88x', 'CA88y', 'CA88z', 'CA89x', 'CA89y', 'CA89z', 'CA90x', 'CA90y', 'CA90z', 'CA91x', 'CA91y', 'CA91z', 'CA92x', 'CA92y', 'CA92z', 'CA93x', 'CA93y', 'CA93z', 'CA94x', 'CA94y', 'CA94z', 'CA95x', 'CA95y', 'CA95z', 'CA96x', 'CA96y', 'CA96z', 'CA97x', 'CA97y', 'CA97z', 'CA98x', 'CA98y', 'CA98z', 'CA99x', 'CA99y', 'CA99z', 'CA100x', 'CA100y', 'CA100z', 'CA101x', 'CA101y', 'CA101z', 'CA102x', 'CA102y', 'CA102z', 'CA103x', 'CA103y', 'CA103z', 'CA104x', 'CA104y', 'CA104z', 'CA105x', 'CA105y', 'CA105z', 'CA106x', 'CA106y', 'CA106z', 'CA107x', 'CA107y', 'CA107z', 'CA108x', 'CA108y', 'CA108z', 'CA109x', 'CA109y', 'CA109z', 'CA110x', 'CA110y', 'CA110z', 'CA111x', 'CA111y', 'CA111z', 'CA112x', 'CA112y', 'CA112z', 'CA113x', 'CA113y', 'CA113z', 'CA114x', 'CA114y', 'CA114z', 'CA115x', 'CA115y', 'CA115z', 'CA116x', 'CA116y', 'CA116z', 'CA117x', 'CA117y', 'CA117z', 'CA118x', 'CA118y', 'CA118z', 'CA119x', 'CA119y', 'CA119z', 'CA120x', 'CA120y', 'CA120z', 'CA121x', 'CA121y', 'CA121z', 'CA122x', 'CA122y', 'CA122z', 'CA123x', 'CA123y', 'CA123z', 'CA124x', 'CA124y', 'CA124z', 'CA125x', 'CA125y', 'CA125z', 'CA126x', 'CA126y', 'CA126z', 'CA127x', 'CA127y', 'CA127z', 'CA128x', 'CA128y', 'CA128z', 'CA129x', 'CA129y', 'CA129z', 'CA130x', 'CA130y', 'CA130z', 'CA131x', 'CA131y', 'CA131z', 'CA132x', 'CA132y', 'CA132z', 'CA133x', 'CA133y', 'CA133z', 'CA134x', 'CA134y', 'CA134z', 'CA135x', 'CA135y', 'CA135z', 'CA136x', 'CA136y', 'CA136z', 'CA137x', 'CA137y', 'CA137z', 'CA138x', 'CA138y', 'CA138z', 'CA139x', 'CA139y', 'CA139z', 'CA140x', 'CA140y', 'CA140z', 'CA141x', 'CA141y', 'CA141z', 'CA142x', 'CA142y', 'CA142z', 'CA143x', 'CA143y', 'CA143z', 'CA144x', 'CA144y', 'CA144z', 'CA145x', 'CA145y', 'CA145z', 'CA146x', 'CA146y', 'CA146z', 'CA147x', 'CA147y', 'CA147z', 'CA148x', 'CA148y', 'CA148z', 'CA149x', 'CA149y', 'CA149z', 'CA150x', 'CA150y', 'CA150z', 'CA151x', 'CA151y', 'CA151z', 'CA152x', 'CA152y', 'CA152z', 'CA153x', 'CA153y', 'CA153z', 'CA154x', 'CA154y', 'CA154z', 'CA155x', 'CA155y', 'CA155z', 'CA156x', 'CA156y', 'CA156z', 'CA157x', 'CA157y', 'CA157z', 'CA158x', 'CA158y', 'CA158z', 'CA159x', 'CA159y', 'CA159z', 'CA160x', 'CA160y', 'CA160z', 'CA161x', 'CA161y', 'CA161z', 'CA162x', 'CA162y', 'CA162z', 'CA163x', 'CA163y', 'CA163z', 'CA164x', 'CA164y', 'CA164z', 'CA165x', 'CA165y', 'CA165z', 'CA166x', 'CA166y', 'CA166z', 'CA167x', 'CA167y', 'CA167z', 'CA168x', 'CA168y', 'CA168z', 'CA169x', 'CA169y', 'CA169z', 'CA170x', 'CA170y', 'CA170z', 'CA171x', 'CA171y', 'CA171z', 'CA172x', 'CA172y', 'CA172z', 'CA173x', 'CA173y', 'CA173z', 'CA174x', 'CA174y', 'CA174z', 'CA175x', 'CA175y', 'CA175z', 'CA176x', 'CA176y', 'CA176z', 'CA177x', 'CA177y', 'CA177z', 'CA178x', 'CA178y', 'CA178z', 'CA179x', 'CA179y', 'CA179z', 'CA180x', 'CA180y', 'CA180z', 'CA181x', 'CA181y', 'CA181z', 'CA182x', 'CA182y', 'CA182z', 'CA183x', 'CA183y', 'CA183z', 'CA184x', 'CA184y', 'CA184z', 'CA185x', 'CA185y', 'CA185z', 'CA186x', 'CA186y', 'CA186z', 'CA187x', 'CA187y', 'CA187z', 'CA188x', 'CA188y', 'CA188z', 'CA189x', 'CA189y', 'CA189z', 'CA190x', 'CA190y', 'CA190z', 'CA191x', 'CA191y', 'CA191z', 'CA192x', 'CA192y', 'CA192z', 'CA193x', 'CA193y', 'CA193z', 'CA194x', 'CA194y', 'CA194z', 'CA195x', 'CA195y', 'CA195z', 'CA196x', 'CA196y', 'CA196z', 'CA197x', 'CA197y', 'CA197z', 'CA198x', 'CA198y', 'CA198z', 'CA199x', 'CA199y', 'CA199z', 'CA200x', 'CA200y', 'CA200z', 'CA201x', 'CA201y', 'CA201z', 'CA202x', 'CA202y', 'CA202z', 'CA203x', 'CA203y', 'CA203z', 'CA204x', 'CA204y', 'CA204z', 'CA205x', 'CA205y', 'CA205z', 'CA206x', 'CA206y', 'CA206z', 'CA207x', 'CA207y', 'CA207z', 'CA208x', 'CA208y', 'CA208z', 'CA209x', 'CA209y', 'CA209z', 'CA210x', 'CA210y', 'CA210z', 'CA211x', 'CA211y', 'CA211z', 'CA212x', 'CA212y', 'CA212z', 'CA213x', 'CA213y', 'CA213z', 'CA214x', 'CA214y', 'CA214z', 'CA215x', 'CA215y', 'CA215z', 'CA216x', 'CA216y', 'CA216z', 'CA217x', 'CA217y', 'CA217z', 'CA218x', 'CA218y', 'CA218z', 'CA219x', 'CA219y', 'CA219z', 'CA220x', 'CA220y', 'CA220z', 'CA221x', 'CA221y', 'CA221z', 'CA222x', 'CA222y', 'CA222z', 'CA223x', 'CA223y', 'CA223z', 'CA224x', 'CA224y', 'CA224z', 'CA225x', 'CA225y', 'CA225z', 'CA226x', 'CA226y', 'CA226z', 'CA227x', 'CA227y', 'CA227z', 'CA228x', 'CA228y', 'CA228z', 'CA229x', 'CA229y', 'CA229z', 'CA230x', 'CA230y', 'CA230z', 'CA231x', 'CA231y', 'CA231z', 'CA232x', 'CA232y', 'CA232z', 'CA233x', 'CA233y', 'CA233z', 'CA234x', 'CA234y', 'CA234z', 'CA235x', 'CA235y', 'CA235z', 'CA236x', 'CA236y', 'CA236z', 'CA237x', 'CA237y', 'CA237z', 'CA238x', 'CA238y', 'CA238z', 'CA239x', 'CA239y', 'CA239z', 'CA240x', 'CA240y', 'CA240z', 'CA241x', 'CA241y', 'CA241z', 'CA242x', 'CA242y', 'CA242z', 'CA243x', 'CA243y', 'CA243z', 'CA244x', 'CA244y', 'CA244z', 'CA245x', 'CA245y', 'CA245z', 'CA246x', 'CA246y', 'CA246z', 'CA247x', 'CA247y', 'CA247z', 'CA248x', 'CA248y', 'CA248z', 'CA249x', 'CA249y', 'CA249z', 'CA250x', 'CA250y', 'CA250z', 'CA251x', 'CA251y', 'CA251z', 'CA252x', 'CA252y', 'CA252z', 'CA253x', 'CA253y', 'CA253z', 'CA254x', 'CA254y', 'CA254z', 'CA255x', 'CA255y', 'CA255z', 'CA256x', 'CA256y', 'CA256z', 'CA257x', 'CA257y', 'CA257z', 'CA258x', 'CA258y', 'CA258z', 'CA259x', 'CA259y', 'CA259z', 'CA260x', 'CA260y', 'CA260z', 'CA261x', 'CA261y', 'CA261z', 'CA262x', 'CA262y', 'CA262z', 'CA263x', 'CA263y', 'CA263z', 'CA264x', 'CA264y', 'CA264z', 'CA265x', 'CA265y', 'CA265z', 'CA266x', 'CA266y', 'CA266z', 'CA267x', 'CA267y', 'CA267z', 'CA268x', 'CA268y', 'CA268z', 'CA269x', 'CA269y', 'CA269z', 'CA270x', 'CA270y', 'CA270z', 'CA271x', 'CA271y', 'CA271z', 'CA272x', 'CA272y', 'CA272z', 'CA273x', 'CA273y', 'CA273z', 'CA274x', 'CA274y', 'CA274z', 'CA275x', 'CA275y', 'CA275z', 'CA276x', 'CA276y', 'CA276z', 'CA277x', 'CA277y', 'CA277z', 'CA278x', 'CA278y', 'CA278z', 'CA279x', 'CA279y', 'CA279z', 'CA280x', 'CA280y', 'CA280z', 'CA281x', 'CA281y', 'CA281z', 'CA282x', 'CA282y', 'CA282z', 'CA283x', 'CA283y', 'CA283z', 'CA284x', 'CA284y', 'CA284z', 'CA285x', 'CA285y', 'CA285z', 'CA286x', 'CA286y', 'CA286z', 'CA287x', 'CA287y', 'CA287z', 'CA288x', 'CA288y', 'CA288z', 'CA289x', 'CA289y', 'CA289z', 'CA290x', 'CA290y', 'CA290z', 'CA291x', 'CA291y', 'CA291z', 'CA292x', 'CA292y', 'CA292z', 'CA293x', 'CA293y', 'CA293z', 'CA294x', 'CA294y', 'CA294z', 'CA295x', 'CA295y', 'CA295z', 'CA296x', 'CA296y', 'CA296z', 'CA297x', 'CA297y', 'CA297z', 'CA298x', 'CA298y', 'CA298z', 'CA299x', 'CA299y', 'CA299z', 'CA300x', 'CA300y', 'CA300z', 'CA301x', 'CA301y', 'CA301z', 'CA302x', 'CA302y', 'CA302z', 'CA303x', 'CA303y', 'CA303z', 'CA304x', 'CA304y', 'CA304z', 'CA305x', 'CA305y', 'CA305z', 'CA306x', 'CA306y', 'CA306z', 'CA307x', 'CA307y', 'CA307z', 'CA308x', 'CA308y', 'CA308z', 'CA309x', 'CA309y', 'CA309z', 'CA310x', 'CA310y', 'CA310z', 'CA311x', 'CA311y', 'CA311z', 'CA312x', 'CA312y', 'CA312z', 'CA313x', 'CA313y', 'CA313z', 'CA314x', 'CA314y', 'CA314z', 'CA315x', 'CA315y', 'CA315z', 'CA316x', 'CA316y', 'CA316z', 'CA317x', 'CA317y', 'CA317z', 'CA318x', 'CA318y', 'CA318z', 'CA319x', 'CA319y', 'CA319z', 'CA320x', 'CA320y', 'CA320z', 'CA321x', 'CA321y', 'CA321z', 'CA322x', 'CA322y', 'CA322z', 'CA323x', 'CA323y', 'CA323z', 'CA324x', 'CA324y', 'CA324z', 'CA325x', 'CA325y', 'CA325z', 'CA326x', 'CA326y', 'CA326z', 'CA327x', 'CA327y', 'CA327z', 'CA328x', 'CA328y', 'CA328z', 'CA329x', 'CA329y', 'CA329z', 'CA330x', 'CA330y', 'CA330z', 'CA331x', 'CA331y', 'CA331z', 'CA332x', 'CA332y', 'CA332z', 'CA333x', 'CA333y', 'CA333z', 'CA334x', 'CA334y', 'CA334z', 'CA335x', 'CA335y', 'CA335z', 'CA336x', 'CA336y', 'CA336z', 'CA337x', 'CA337y', 'CA337z', 'CA338x', 'CA338y', 'CA338z', 'CA339x', 'CA339y', 'CA339z', 'CA340x', 'CA340y', 'CA340z', 'CA341x', 'CA341y', 'CA341z', 'CA342x', 'CA342y', 'CA342z', 'CA343x', 'CA343y', 'CA343z', 'CA344x', 'CA344y', 'CA344z', 'CA345x', 'CA345y', 'CA345z', 'CA346x', 'CA346y', 'CA346z', 'CA347x', 'CA347y', 'CA347z', 'CA348x', 'CA348y', 'CA348z', 'CA349x', 'CA349y', 'CA349z', 'CA350x', 'CA350y', 'CA350z', 'CA351x', 'CA351y', 'CA351z', 'CA352x', 'CA352y', 'CA352z', 'CA353x', 'CA353y', 'CA353z', 'CA354x', 'CA354y', 'CA354z', 'CA355x', 'CA355y', 'CA355z', 'CA356x', 'CA356y', 'CA356z', 'CA357x', 'CA357y', 'CA357z', 'CA358x', 'CA358y', 'CA358z', 'CA359x', 'CA359y', 'CA359z', 'CA360x', 'CA360y', 'CA360z', 'CA361x', 'CA361y', 'CA361z', 'CA362x', 'CA362y', 'CA362z', 'CA363x', 'CA363y', 'CA363z', 'CA364x', 'CA364y', 'CA364z', 'CA365x', 'CA365y', 'CA365z', 'CA366x', 'CA366y', 'CA366z', 'CA367x', 'CA367y', 'CA367z', 'CA368x', 'CA368y', 'CA368z', 'CA369x', 'CA369y', 'CA369z', 'CA370x', 'CA370y', 'CA370z', 'CA371x', 'CA371y', 'CA371z', 'CA372x', 'CA372y', 'CA372z', 'CA373x', 'CA373y', 'CA373z', 'CA374x', 'CA374y', 'CA374z', 'CA375x', 'CA375y', 'CA375z', 'CA376x', 'CA376y', 'CA376z', 'CA377x', 'CA377y', 'CA377z', 'CA378x', 'CA378y', 'CA378z', 'CA379x', 'CA379y', 'CA379z', 'CA380x', 'CA380y', 'CA380z', 'CA381x', 'CA381y', 'CA381z', 'CA382x', 'CA382y', 'CA382z', 'CA383x', 'CA383y', 'CA383z', 'CA384x', 'CA384y', 'CA384z', 'CA385x', 'CA385y', 'CA385z', 'CA386x', 'CA386y', 'CA386z', 'CA387x', 'CA387y', 'CA387z', 'CA388x', 'CA388y', 'CA388z', 'CA389x', 'CA389y', 'CA389z', 'CA390x', 'CA390y', 'CA390z', 'CA391x', 'CA391y', 'CA391z', 'CA392x', 'CA392y', 'CA392z', 'CA393x', 'CA393y', 'CA393z', 'CA394x', 'CA394y', 'CA394z', 'CA395x', 'CA395y', 'CA395z', 'CA396x', 'CA396y', 'CA396z', 'CA397x', 'CA397y', 'CA397z', 'CA398x', 'CA398y', 'CA398z', 'CA399x', 'CA399y', 'CA399z', 'CA400x', 'CA400y', 'CA400z', 'CA401x', 'CA401y', 'CA401z', 'CA402x', 'CA402y', 'CA402z', 'CA403x', 'CA403y', 'CA403z', 'CA404x', 'CA404y', 'CA404z', 'CA405x', 'CA405y', 'CA405z', 'CA406x', 'CA406y', 'CA406z', 'CA407x', 'CA407y', 'CA407z', 'CA408x', 'CA408y', 'CA408z', 'CA409x', 'CA409y', 'CA409z', 'CA410x', 'CA410y', 'CA410z', 'CA411x', 'CA411y', 'CA411z', 'CA412x', 'CA412y', 'CA412z', 'CA413x', 'CA413y', 'CA413z', 'CA414x', 'CA414y', 'CA414z', 'CA415x', 'CA415y', 'CA415z', 'CA416x', 'CA416y', 'CA416z', 'CA417x', 'CA417y', 'CA417z', 'CA418x', 'CA418y', 'CA418z', 'CA419x', 'CA419y', 'CA419z', 'CA420x', 'CA420y', 'CA420z', 'CA421x', 'CA421y', 'CA421z', 'CA422x', 'CA422y', 'CA422z', 'CA423x', 'CA423y', 'CA423z', 'CA424x', 'CA424y', 'CA424z', 'CA425x', 'CA425y', 'CA425z', 'CA426x', 'CA426y', 'CA426z', 'CA427x', 'CA427y', 'CA427z', 'CA428x', 'CA428y', 'CA428z', 'CA429x', 'CA429y', 'CA429z', 'CA430x', 'CA430y', 'CA430z', 'CA431x', 'CA431y', 'CA431z', 'CA432x', 'CA432y', 'CA432z', 'CA433x', 'CA433y', 'CA433z', 'CA434x', 'CA434y', 'CA434z', 'CA435x', 'CA435y', 'CA435z', 'CA436x', 'CA436y', 'CA436z', 'CA437x', 'CA437y', 'CA437z', 'CA438x', 'CA438y', 'CA438z', 'CA439x', 'CA439y', 'CA439z', 'CA440x', 'CA440y', 'CA440z', 'CA441x', 'CA441y', 'CA441z', 'CA442x', 'CA442y', 'CA442z', 'CA443x', 'CA443y', 'CA443z', 'CA444x', 'CA444y', 'CA444z', 'CA445x', 'CA445y', 'CA445z', 'CA446x', 'CA446y', 'CA446z', 'CA447x', 'CA447y', 'CA447z', 'CA448x', 'CA448y', 'CA448z']
        self.assertTrue(col_labels == col_labels_val)
    
    def test_import_pdbfiles_into_datastruct(self):
        p = ProteinDataImporter(trajectory_file=self.trajectory_file,
                            structure_file=self.structure_file,
                            protein_name=self.protein_name,
                            output_dir=self.output_dir)
        dataStruct = p.get_coord_matrix()
        
        self.assertEqual(len(dataStruct.row_labels), p.num_frames)
        
        np.testing.assert_array_equal(dataStruct.row_labels,
                         [p.protein_name + str(i) for i in range(p.num_frames)])
        
        self.assertEqual(dataStruct.data.shape[0], p.num_frames)
        self.assertEqual(dataStruct.data.shape[1], p.num_atoms * 3)
        
        data_16_line = np.array([12.109, -10.774, 5.84, 8.342, -10.171, 5.772, 6.281, -9.423, 2.712, 3.82, -7.433, 4.817, 4.424, -3.729, 4.713, 2.432, -0.856, 5.902, 1.438, 2.551, 4.572, 1.724, 5.442, 6.964, -0.294, 7.937, 5.055, 0.316, 11.595, 6.048, 2.031, 10.73, 9.274, 4.802, 13.063, 10.507, 8.505, 11.904, 10.654, 8.488, 11.732, 14.429, 5.153, 9.738, 14.768, 6.698, 7.385, 12.126, 10.037, 6.897, 13.963, 8.159, 6.027, 17.193, 5.765, 3.48, 15.563, 8.838, 1.835, 14.125, 11.144, 1.497, 17.247, 8.165, 0.581, 19.359, 6.012, -1.729, 17.205, 6.689, -2.025, 13.383, 10.417, -2.888, 13.705, 9.966, -5.562, 16.431, 6.766, -6.716, 14.688, 6.512, -8.518, 11.304, 7.111, -5.742, 8.873, 9.062, -5.3, 5.613, 8.622, -1.53, 5.205, 7.081, 1.764, 6.03, 5.515, 3.531, 3.038, 6.025, 7.251, 3.757, 5.575, 11.023, 2.987, 7.08, 12.874, -0.001, 10.166, 14.369, 1.682, 10.477, 17.457, -0.594, 9.351, 21.092, -0.528, 5.734, 21.377, -1.578, 3.058, 24.115, -1.917, 1.246, 25.404, 1.206, -2.234, 24.217, 2.163, -4.355, 21.739, 4.222, -4.918, 19.413, 1.29, -3.857, 15.849, 0.424, -2.858, 16.799, -3.149, -0.526, 19.644, -1.995, 1.444, 16.802, -0.218, 1.684, 15.472, -3.803, 2.719, 18.842, -5.397, 6.397, 19.648, -5.297, 8.361, 22.829, -5.522, 12.046, 22.103, -4.694, 14.156, 19.192, -3.451, 14.719, 20.983, -0.102, 13.547, 18.533, 2.548, 11.078, 20.769, 4.404, 7.462, 19.5, 4.122, 4.177, 19.703, 5.933, 4.522, 17.204, 8.792, 8.336, 17.391, 8.814, 11.83, 18.891, 8.208, 15.225, 17.444, 7.252, 16.743, 16.821, 10.672, 13.503, 15.077, 11.693, 13.536, 13.092, 8.432, 17.11, 11.938, 9.369, 16.045, 11.071, 12.933, 13.118, 9.127, 11.405, 15.333, 7.262, 8.948, 17.868, 6.213, 11.587, 15.281, 4.929, 14.105, 13.442, 2.829, 11.481, 16.714, 1.733, 9.778, 17.882, 0.369, 13.155, 14.551, -0.851, 14.551, 14.227, -3.288, 11.705, 12.163, -1.933, 8.704, 12.674, -0.345, 5.345, 11.852, 3.318, 4.469, 9.732, 3.587, 1.292, 9.227, 7.248, 0.164, 6.221, 8.482, -1.9, 8.528, 10.315, -4.305, 7.321, 12.247, -7.341, 8.899, 12.316, -10.841, 6.253, 13.756, -13.19, 4.449, 16.991, -12.318, 5.685, 20.161, -10.592, 3.325, 22.406, -8.7, 0.524, 24.619, -10.129, 0.478, 28.41, -9.93, 3.124, 30.72, -8.656, 4.173, 31.674, -5.083, 6.304, 29.79, -2.582, 6.43, 26.57, -0.712, 7.292, 24.977, 2.64, 10.933, 25.823, 2.813, 9.859, 29.034, 1.081, 10.951, 28.954, -2.532, 9.785, 31.263, -5.196, 8.344, 29.351, -8.199, 6.81, 31.273, -11.059, 4.519, 30.054, -13.883, 6.536, 27.018, -14.889, 9.664, 28.79, -13.427, 10.947, 26.987, -10.383, 13.917, 28.264, -8.186, 15.949, 25.157, -9.348, 14.474, 24.551, -12.778, 13.998, 26.55, -16.074, 10.873, 27.32, -18.064, 12.414, 25.074, -20.757, 12.659, 21.945, -18.54, 8.841, 21.761, -18.71, 6.578, 20.558, -21.545, 4.726, 22.797, -24.123, 1.322, 24.448, -23.502, -0.49, 21.313, -24.692, -2.947, 19.899, -22.124, -4.727, 16.704, -21.29, -8.512, 16.398, -21.179, -10.874, 13.38, -20.977, -11.178, 12.327, -24.662, -7.452, 12.552, -25.133, -6.646, 10.388, -22.131, -8.189, 7.277, -23.8, -6.513, 8.336, -27.049, -2.977, 9.855, -27.25, 0.531, 9.079, -26.072, 1.807, 12.585, -26.78, -1.023, 13.959, -24.584, -0.835, 11.6, -21.615, 2.959, 11.532, -21.428, 4.248, 14.654, -23.133, 1.647, 17.21, -22.114, 0.522, 19.134, -18.891, -2.375, 18.239, -16.592, -3.877, 21.735, -16.054, -1.243, 23.767, -14.359, 0.615, 20.575, -13.146, 3.862, 21.461, -14.853, 5.145, 18.419, -16.664, 8.883, 17.804, -16.057, 10.952, 17.207, -19.212, 11.916, 13.702, -18.211, 14.551, 13.432, -20.989, 16.389, 16.617, -19.948, 19.81, 15.691, -18.401, 19.405, 18.341, -15.719, 15.945, 16.92, -14.804, 17.177, 13.298, -14.76, 20.212, 14.456, -12.608, 18.264, 16.654, -10.074, 15.987, 13.716, -9.198, 18.904, 11.229, -9.309, 20.936, 13.295, -6.801, 18.011, 13.483, -4.365, 17.565, 9.68, -4.611, 21.257, 8.877, -4.437, 21.686, 11.036, -1.301, 18.661, 9.234, 0.307, 20.299, 5.856, -0.572, 23.222, 6.966, 1.531, 21.187, 7.95, 4.624, 19.425, 4.664, 4.006, 16.137, 4.937, 2.074, 15.474, 1.829, 0.014, 12.043, 2.22, -1.572, 11.356, 5.007, -4.126, 7.953, 5.833, -5.627, 7.775, 7.013, -9.227, 4.423, 8.657, -9.095, 2.113, 8.986, -12.113, 4.799, 7.006, -13.952, 2.363, 6.227, -16.748, 2.545, 9.946, -17.583, 6.161, 9.216, -18.57, 7.077, 7.231, -21.717, 9.442, 4.233, -21.995, 12.754, 6.028, -22.812, 11.887, 8.43, -19.984, 11.229, 5.836, -17.294, 14.348, 3.876, -18.25, 16.562, 7.038, -18.171, 14.934, 8.159, -14.896, 15.326, 4.997, -12.947, 18.638, 4.324, -14.677, 20.208, 7.454, -13.274, 19.582, 6.285, -9.699, 22.582, 4.94, -7.883, 21.817, 1.244, -8.591, 18.455, -0.563, -8.477, 16.958, -0.384, -4.943, 13.114, -0.523, -4.647, 11.575, 1.337, -7.595, 7.753, 1.38, -7.318, 5.444, 2.978, -9.814, 1.952, 4.53, -10.1, 0.29, 2.879, -13.085, -3.563, 2.758, -12.98, -5.301, 0.18, -15.226, -9.078, 0.892, -15.589, -10.516, 1.467, -19.089, -9.682, 4.72, -20.796, -5.912, 4.727, -21.078, -3.544, 5.676, -23.857, -0.797, 3.314, -22.714, -0.773, -0.169, -21.023, 1.528, -1.87, -18.502, 4.296, -3.211, -20.717, 7.292, -0.758, -20.619, 6.513, -0.133, -16.97, 6.609, -3.905, -15.97, 9.939, -4.105, -17.787, 11.392, -1.11, -16.014, 10.493, -1.637, -12.354, 7.982, -2.65, -9.603, 4.355, -1.811, -10.44, 1.197, -1.167, -8.448, -1.666, -3.435, -9.425, -4.686, -1.165, -9.302, -6.958, -3.425, -11.326, -6.632, -6.126, -8.563, -7.75, -3.562, -6.047, -10.99, -2.644, -7.987, -11.686, -6.284, -8.544, -11.169, -7.215, -4.845, -13.553, -4.332, -4.155, -16.53, -5.527, -6.341, -16.078, -9.209, -5.326, -16.264, -8.536, -1.562, -19.101, -5.906, -1.968, -21.221, -7.548, -4.726, -19.938, -10.912, -5.754, -18.998, -14.546, -5.218, -16.078, -15.094, -2.794, -15.797, -18.449, -4.621, -14.487, -16.427, -7.659, -11.12, -15.793, -5.896, -9.528, -19.272, -6.34, -6.744, -18.175, -8.628, -7.205, -14.431, -8.106, -4.146, -13.546, -10.024, -2.612, -15.213, -13.156, -5.682, -17.412, -13.915, -7.994, -14.465, -13.864, -5.398, -12.35, -15.637, -2.671, -10.789, -13.408, 1.155, -10.009, -13.544, 3.849, -11.999, -11.649, 4.039, -11.25, -7.873, 7.819, -10.836, -8.162, 7.412, -7.192, -9.174, 4.017, -6.137, -7.808, 2.225, -4.396, -4.887, -1.148, -5.661, -3.717, -3.588, -3.412, -1.713, -7.195, -2.451, -1.064, -7.66, 1.308, -0.585, -5.503, 4.189, -1.85, -5.955, 8.032, -1.785, -7.49, 8.062, -5.259, -10.183, 5.409, -4.377, -10.662, 7.128, -1.029, -11.386, 10.532, -2.628, -13.346, 9.578, -5.776, -11.201, 9.007, -8.916, -10.033, 5.432, -9.63, -11.882, 2.84, -7.621, -15.482, 3.905, -7.125, -18.582, 1.797, -6.658, -16.214, -1.218, -6.271, -13.574, -0.516, -3.589, -14.164, -0.768, 0.151, -12.063, 1.794, 1.969, -10.818, 3.375, 5.202, -14.378, 4.291, 6.266, -15.753, 0.725, 6.223, -16.316, -1.736, 9.065, -16.763, -5.493, 8.524, -15.87, -5.607, 4.748, -12.828, -3.337, 5.342, -11.576, -5.73, 8.085, -12.367, -8.77, 5.963, -10.902, -7.574, 2.626, -7.545, -6.624, 4.057, -7.277, -9.989, 5.895, -8.154, -11.839, 2.682, -5.736, -9.729, 0.733, -3.042, -10.341, 3.416, -3.562, -14.054, 3.812, -3.764, -14.884, 0.051, -0.238, -15.009, -1.497, 0.045, -12.36, -4.185, 2.23, -9.359, -5.005, 3.624, -7.52, -2.0, 0.897, -6.611, 0.639, 0.36, -3.013, 1.828, -1.788, -2.191, 4.774, -2.945, 1.403, 5.134, -2.951, 3.226, 8.443, -4.686, 6.494, 7.62, -6.592, 9.486, 8.916, -10.412, 9.248, 9.143, -11.547, 12.153, 6.95, -15.125, 13.281, 6.433, -16.978, 15.801, 4.263, -13.94, 17.634, 2.734, -12.646, 14.889, 0.419, -9.68, 17.386, -0.282, -8.525, 17.688, 3.413, -5.338, 15.994, 4.542, -3.427, 15.185, 7.793, -4.959, 16.937, 10.875, -3.526, 19.089, 13.723, -3.604, 16.032, 15.993, -0.418, 14.023, 15.817, -0.281, 10.245, 16.229, 2.127, 9.129, 18.951, 2.71, 12.641, 20.395, 6.326, 12.264, 21.685, 4.322, 10.258, 24.302, 0.576, 9.568, 24.056, -1.119, 7.126, 21.565, -3.964, 8.511, 19.56, -3.729, 5.086, 17.927, -6.973, 3.064, 18.169, -9.023, 6.237, 18.378, -11.203, 7.86, 15.8, -8.899, 9.679, 13.33, -5.684, 7.681, 13.922, -7.057, 4.165, 14.461, -3.573, 2.954, 13.184, -4.749, -0.154, 11.216, -1.624, -2.31, 11.69, -2.341, -2.189, 15.493, -5.764, -3.672, 14.816, -6.953, -7.257, 15.076, -7.654, -8.985, 11.63, -5.002, -6.884, 9.906, -2.449, -7.811, 12.629, -3.504, -11.457, 12.51, -3.048, -11.422, 8.719, 0.455, -9.916, 8.97, 1.671, -12.693, 11.289, -0.209, -15.383, 9.437, 1.361, -14.759, 6.013, 4.743, -14.369, 7.742, 4.469, -17.858, 9.523, 3.414, -19.471, 6.278, 6.136, -18.054, 4.083, 7.261, -21.612, 3.25, 3.857, -23.062, 2.274, 3.46, -20.167, -0.117, 0.729, -21.061, -2.74, -2.848, -22.114, -2.191, -2.954, -25.766, -2.985, -6.402, -26.462, -1.528, -9.401, -24.364, -2.162, -13.012, -25.01, -1.191, -16.151, -22.949, -1.946, -19.618, -23.084, -0.343, -22.136, -21.279, -2.565, -21.033, -17.65, -2.927, -19.729, -15.549, 0.056, -17.929, -18.305, 2.012, -14.656, -19.992, 1.115, -11.677, -21.889, 2.655, -7.981, -21.845, 1.642, -5.189, -24.127, 2.465, -1.575, -22.984, 2.448, -0.164, -26.472, 2.586, 0.671, -28.265, 5.829, 1.8, -25.038, 7.458, -1.351, -22.89, 7.481, -5.112, -22.794, 6.789, -7.334, -19.651, 6.391, -11.139, -19.605, 6.126, -13.365, -16.637, 5.405, -16.989, -15.678, 5.416, -18.654, -12.586, 4.011, -22.085, -14.289, 4.136, -24.864, -13.548, 6.701, -24.918, -17.252, 7.578, -21.946, -18.85, 9.325, -19.099, -20.965, 7.894, -19.092, -24.062, 10.106, -17.26, -26.813, 8.171, -14.721, -29.639, 8.156, -12.318, -29.642, 5.235, -9.737, -32.401, 4.477, -6.296, -31.104, 3.383, -2.505, -31.613, 3.958, -2.577, -29.675, 7.247, -0.402, -30.735, 10.157, -2.142, -32.649, 12.939, -3.168, -30.724, 16.057, -5.244, -28.002, 17.637, -4.517, -24.306, 16.793, -5.759, -20.828, 17.607, -7.284, -17.907, 15.663, -4.272, -15.667, 15.023, -6.705, -12.864, 14.145, -7.666, -12.882, 17.82, -4.332, -13.886, 19.388, -3.344, -17.37, 20.556, -3.876, -18.533, 24.11, -5.932, -17.496, 27.103, -5.0, -17.131, 30.767, -6.246, -20.746, 31.25, -4.559, -21.839, 28.006, -7.086, -24.679, 27.546, -9.173, -22.761, 25.029, -7.904, -20.24, 22.423, -7.997, -16.467, 22.922, -10.532, -16.573, 20.092, -11.763, -19.444, 17.849, -10.329, -22.839, 18.63, -9.387, -24.501, 15.343, -9.039, -28.278, 15.668, -7.251, -30.186, 12.919, -8.137, -33.868, 13.341, -5.761, -36.768, 12.5, -6.839, -37.224, 8.901, -6.15, -33.518, 8.245, -9.679, -32.183, 8.657, -9.678, -28.57, 9.52, -12.65, -27.891, 11.786, -13.429, -24.235, 10.671, -16.037, -22.729, 12.892, -16.391, -19.031, 12.079, -19.136, -16.582, 12.752, -21.194, -14.549, 10.384, -19.087, -12.027, 8.427, -15.838, -13.134, 10.059, -12.56, -14.97, 9.349, -10.227, -17.585, 10.716, -6.48, -17.847, 10.302, -4.498, -20.763, 11.734, -0.816, -21.289, 11.554, 1.795, -23.749, 12.691, 3.123, -21.379, 15.343, -0.009, -20.182, 17.138, -1.413, -23.361, 18.667, -3.456, -24.914, 21.421, -1.581, -27.397, 23.483])
        np.testing.assert_array_equal(dataStruct.data[15], data_16_line)
        
